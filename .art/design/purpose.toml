[REQ-1]

[REQ-cmd]
partof = 'REQ-1'
text = 'Command line tool'

[REQ-game]
partof = 'REQ-1'
text = 'Market playing game.'

[REQ-storage]
partof = 'REQ-1'
text = 'Market events storage.'

[REQ-streams]
partof = 'REQ-1'
text = 'Streams engine'

[SPC-broker]
partof = 'REQ-game'
text = '''
Markets brokers interface.

Brokers need to provide CRUD methods for orders.'''

[SPC-broker-poloniex]
text = 'Poloniex market broker.'

[SPC-game]
text = '''
Game platform engine.

Designed to run tests and improve based on genetic algorithms.'''

[SPC-game-dna]
partof = 'SPC-game-play'
text = '''
DNA generator. Genetic algorithms.
'''

[SPC-game-play]
text = '''
Runner of a game with specified configuration.

This configuration is generated by [[SPC-game-dna]] and results are analysed by TODO'''

[SPC-game-render]
partof = 'SPC-game-dna'
text = 'Rendering for game - utilities.'

[SPC-game-scenario]
partof = 'SPC-game-play'
text = '''
Scenario generator for gameplay.

It is only possible to compare different [[SPC-game-dna]] when scenario being tested and trained on is the same.'''

[SPC-storage]
partof = 'SPC-game'
text = 'Market events log database.'

[SPC-storage-logs]
text = '''
Logs of market events - trades and orders.

Order books are reconstructed from events on _reset_.'''

[SPC-storage-meta]
text = '''
Metadata storage.

Contains market/pair/db data.'''

[SPC-streams]
text = '''
WebSocket streams protocols implementations for markets.
'''

[SPC-streams-bitfinex]
text = '''
Bitfinex WebSocket stream protocol implementation.
'''

[SPC-streams-poloniex]
text = '''
Poloniex WebSocket stream protocol implementation.
'''

[TST-broker]

[TST-broker-poloniex]

[TST-streams]

[TST-streams-bitfinex]

[TST-streams-poloniex]
text = 'Tests for Poloniex WebSocket stream protocol.'
